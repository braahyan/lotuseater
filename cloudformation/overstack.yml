Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  BucketName:
    Type: String
  StackName:
    Type: String
Resources:
  Network:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/00-network.packaged.yml"
  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/01-securityGroups.packaged.yml"
      Parameters:
        Vpc: !GetAtt Network.Outputs.Vpc
  Aurora:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/02-aurora.packaged.yml"
      Parameters:
        Subnet1: !GetAtt Network.Outputs.PrivateSubnet1
        Subnet2: !GetAtt Network.Outputs.PrivateSubnet2
        SecurityGroupId: !GetAtt SecurityGroups.Outputs.DatabaseAccessSecurityGroup
        DatabaseName: 'test'
  S3Processor:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/03-SAMs3processor.packaged.yml"
      Parameters:
        Subnet1: !GetAtt Network.Outputs.PrivateSubnet1
        Subnet2: !GetAtt Network.Outputs.PrivateSubnet2
        DatabaseCredentialsSecretLocation: !GetAtt Aurora.Outputs.DatabaseCredentialsSecret
        DatabaseAccessSecurityGroup: !GetAtt SecurityGroups.Outputs.DatabaseAccessSecurityGroup
        DatabasePort: !GetAtt Aurora.Outputs.DatabasePort
        DatabaseName: 'test'
        DatabaseEndpoint: !GetAtt Aurora.Outputs.DatabaseEndpoint
  KinesisFirehose:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/04-kinesis.packaged.yml"
      Parameters:
        S3BucketName: !GetAtt S3Processor.Outputs.S3Bucket
  KinesisCollector:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/05-SAMkinesisCollector.packaged.yml"
      Parameters:
        KinesisStreamName: !GetAtt KinesisFirehose.Outputs.DeliveryStreamName
        KinesisStreamArn: !GetAtt KinesisFirehose.Outputs.DeliveryStreamArn
  Pipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/06-continuousIntegration.packaged.yml"
      Parameters:
        RepoOwner: braahyan
        RepoName: lotuseater
        RepoBranchName: master
        NotificationEmail: !Join ['', ['{{resolve:secretsmanager:', MyEmail, ':SecretString}}' ]]
        Subnet1: !GetAtt Network.Outputs.PrivateSubnet1
        Subnet2: !GetAtt Network.Outputs.PrivateSubnet2
        DatabaseCredentialsSecretLocation: !GetAtt Aurora.Outputs.DatabaseCredentialsSecret
        DatabaseAccessSecurityGroup: !GetAtt SecurityGroups.Outputs.DatabaseAccessSecurityGroup
        DatabasePort: !GetAtt Aurora.Outputs.DatabasePort
        DatabaseName: 'test'
        DatabaseEndpoint: !GetAtt Aurora.Outputs.DatabaseEndpoint
        StackName: !Ref StackName
