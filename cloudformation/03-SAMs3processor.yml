Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  NetworkStackName:
    Type: String
  SecurityGroupStackName:
    Type: String
  DBStackName:
    Type: String
Resources:
  S3BucketConsumer:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: python3.6
      Handler: index.s3_handler
      Timeout: 180
      CodeUri: ./../src
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17'
          Statement:
            - Action:
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:CreateNetworkInterface"
                - "ec2:DeleteNetworkInterface"
              Effect: Allow
              Resource: "*"
        - Version: '2012-10-17'
          Statement:
            - Action:
                - secretsmanager:GetSecretValue
              Effect: Allow
              Resource:
                Fn::ImportValue:
                  !Sub "${DBStackName}-DatabaseCredentials"
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue:
              !Sub "${NetworkStackName}-PrivateSubnet1"
          - Fn::ImportValue:
              !Sub "${NetworkStackName}-PrivateSubnet2"
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub "${SecurityGroupStackName}-DatabaseAccessSecurityGroup"
      Environment:
        Variables:
          DB_NAME:
            Fn::ImportValue:
              !Sub "${DBStackName}-DatabaseName"
          DB_CREDENTIALS:
            Fn::ImportValue:
              !Sub "${DBStackName}-DatabaseCredentials"
          DB_ENDPOINT:
            Fn::ImportValue:
              !Sub "${DBStackName}-DatabaseEndpoint"
          DB_PORT:
            Fn::ImportValue:
              !Sub "${DBStackName}-DatabasePort"

      Events:
        ObjectReceived:
          Type: S3
          Properties:
            Bucket: !Ref S3Bucket
            Events: s3:ObjectCreated:*

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
Outputs:
  S3Bucket:
    Description: The subnet ID to use for public web servers
    Value:
      Ref: S3Bucket
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-S3Bucket"
