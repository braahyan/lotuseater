Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  Subnet1:
    Type: String
  Subnet2:
    Type: String
  DatabaseCredentialsSecretLocation:
    Type: String
  DatabaseAccessSecurityGroup:
    Type: String
  DatabasePort:
    Type: String
  DatabaseName:
    Type: String
  DatabaseEndpoint:
    Type: String
Resources:
  S3BucketConsumer:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: python3.6
      Handler: lotuseater.index.s3_handler
      Timeout: 180
      CodeUri: ./../src
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17'
          Statement:
            - Action:
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:CreateNetworkInterface"
                - "ec2:DeleteNetworkInterface"
              Effect: Allow
              Resource: "*"
        - Version: '2012-10-17'
          Statement:
            - Action:
                - secretsmanager:GetSecretValue
              Effect: Allow
              Resource: !Ref DatabaseCredentialsSecretLocation
      VpcConfig:
        SubnetIds:
          - !Ref Subnet1
          - !Ref Subnet2
        SecurityGroupIds:
          - !Ref DatabaseAccessSecurityGroup
      Environment:
        Variables:
          DB_NAME: !Ref DatabaseName
          DB_CREDENTIALS: !Ref DatabaseCredentialsSecretLocation
          DB_ENDPOINT: !Ref DatabaseEndpoint
          DB_PORT: !Ref DatabasePort

      Events:
        ObjectReceived:
          Type: S3
          Properties:
            Bucket: !Ref S3Bucket
            Events: s3:ObjectCreated:*

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
Outputs:
  StackName:
    Value: !Ref AWS::StackName
  S3Bucket:
    Value:
      Ref: S3Bucket
