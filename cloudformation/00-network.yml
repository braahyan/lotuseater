AWSTemplateFormatVersion: 2010-09-09
Description: lotuseater
Outputs:
  PublicSubnet1:
    Description: The subnet ID to use for public web servers
    Value:
      Ref: PublicSubnet
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PublicSubnet1"
  PublicSubnet2:
    Description: The subnet ID to use for public web servers
    Value:
      Ref: PublicSubnet2
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PublicSubnet2"
  PrivateSubnet1:
    Description: The subnet ID to use for public web servers
    Value:
      Ref: PrivateSubnet
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PrivateSubnet1"
  PrivateSubnet2:
    Description: The subnet ID to use for public web servers
    Value:
      Ref: PrivateSubnet2
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PrivateSubnet2"
  VPC:
    Description: VPC Output
    Value:
      Ref: VPC
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-VPC"
Resources:
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  PrivateRouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  NAT:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnet
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT
  NAT2:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP2
        - AllocationId
      SubnetId:
        Ref: PublicSubnet2
  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.0.0.0/16
  PublicSubnet:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref VPC
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPC
  PrivateSubnet:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref VPC
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref VPC
  PublicSubnetRouteTableAssociation:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
  PrivSubnetNetAclAssocAZ1:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet
      NetworkAclId:
        Ref: PrivateNetworkAcl
  PrivSubnetNetAclAssocAZ2:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      NetworkAclId:
        Ref: PrivateNetworkAcl
  PrivNetAclInboundEntry100:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'
  PrivNetAclInboundEntry110:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '110'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'
  PrivNetAclInboundEntry120:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '120'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: '10.0.0.0/16'
      PortRange:
        From: '22'
        To: '22'
  PrivNetAclInboundEntry140:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '140'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '1024'
        To: '65535'
  PrivNetAclInboundEntry150:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '150'
      Protocol: '1'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: '10.0.0.0/16'
      Icmp:
        Code: '-1'
        Type: '-1'
  PrivNetAclOutboundEntry100:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'
  PrivNetAclOutboundEntry110:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '110'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'
  PrivNetAclOutboundEntry120:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '120'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.0.0/16'
      PortRange:
        From: '1024'
        To: '65535'
  PrivNetAclOutboundEntry150:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '150'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.2.0/16'
      PortRange:
        From: '22'
        To: '22'
  PrivNetAclOutboundEntry151:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '151'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.3.0/16'
      PortRange:
        From: '22'
        To: '22'
  PrivNetAclOutboundEntry160:
    DependsOn:
    - PrivateNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNetworkAcl
      RuleNumber: '160'
      Protocol: '1'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.0.0/16'
      Icmp:
        Code: '-1'
        Type: '-1'
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
  PubSubnetNetAclAssocAZ1:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      NetworkAclId:
        Ref: PublicNetworkAcl
  PubSubnetNetAclAssocAZ2:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      NetworkAclId:
        Ref: PublicNetworkAcl
  PubNetAclInboundEntry100:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'
  PubNetAclInboundEntry110:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '110'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'
  PubNetAclInboundEntry120:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '120'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: '22'
        To: '22'
  PubNetAclInboundEntry140:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '140'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '1024'
        To: '65535'
  PubNetAclInboundEntry150:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '150'
      Protocol: '1'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: '10.0.0.0/16'
      Icmp:
        Code: '-1'
        Type: '-1'
  PubNetAclOutboundEntry100:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'
  PubNetAclOutboundEntry110:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '110'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'
  PubNetAclOutboundEntry130:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '130'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.2.0/0'
      PortRange:
        From: '3306'
        To: '3306'
  PubNetAclOutboundEntry131:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '131'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.3.0/0'
      PortRange:
        From: '3306'
        To: '3306'
  PubNetAclOutboundEntry140:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '140'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '1024'
        To: '65535'
  PubNetAclOutboundEntry150:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '150'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.2.0/0'
      PortRange:
        From: '22'
        To: '22'
  PubNetAclOutboundEntry151:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '151'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: '10.0.3.0/0'
      PortRange:
        From: '22'
        To: '22'
  PubNetAclOutboundEntry160:
    DependsOn:
    - PublicNetworkAcl
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: '160'
      Protocol: '1'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: '-1'
        Type: '-1'
